[package]
name = "yral-auth-v2"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "jwt-secret-gen"
path = "src/jwt_secret_gen.rs"

[dependencies]
leptos = { version = "0.7.0" }
leptos_router = { version = "0.7.0" }
axum = { version = "0.7", optional = true, features = ["macros", "json", "form"] }
axum-extra = { version = "0.9.3", features = ["cookie", "cookie-private"], optional = true }
console_log = { version = "0.1", optional = true }
console_error_panic_hook = { version = "0.1", optional = true}
leptos_axum = { version = "0.7.0", optional = true }
leptos_meta = { version = "0.7.0" }
tokio = { version = "1", features = ["rt-multi-thread"], optional = true }
wasm-bindgen = { version = "=0.2.100", optional = true }
thiserror = { version = "2.0.12" }
leptos_icons = { version = "0.5.0"}
icondata = { version = "0.5.0", default-features = false }
icondata_core = { version = "0.1.0"}
enum_dispatch = "0.3.13"
serde = { version = "1.0.219", features = ["derive"] }
url = { version = "2.5.4", features = ["serde"] }
base64 = "0.22.1"
postcard = { version = "1.1.1", features = ["use-std"] }
openidconnect = "4.0.0"
hex = { version = "0.4.3", optional = true}
log = "0.4.27"
simple_logger = { version = "4.0", optional = true }
dotenvy = { version = "0.15.7", optional = true }
jsonwebtoken = { version = "9.3.1", optional = true }
candid = { version = "0.10.13" }
serde_json = { version = "1.0.140" }
redis = { version = "0.25.2", features = [
    "tokio-rustls-comp",
    "aio",
    "ahash",
    "connection-manager",
    "keep-alive",
], default-features = false, optional = true }
bb8 = { version = "0.8.3", optional = true }
bb8-redis = { version = "0.15.0", optional = true }
redb = { version = "2.0.0", optional = true }
yral-types = { git = "https://github.com/yral-dapp/yral-common.git", branch = "rupansh/bump-ic-agent" }
sha2 = { version = "0.10.8", optional = true }
k256 = { version = "0.13.4", optional = true }
ic-agent = { version = "0.41.0", default-features = false }
rand = { version = "0.8.5", optional = true }
web-time = "1.1.0"
yral-identity = { git = "https://github.com/yral-dapp/yral-common.git", branch = "rupansh/bump-ic-agent", default-features = false }
p256 = { version = "0.13.2", features = ["pkcs8"], optional = true }
regex = "1.11.1"

[features]
redis-kv = []
hydrate = [
    "leptos/hydrate",
    "dep:console_error_panic_hook",
    "dep:wasm-bindgen",
    "dep:console_log",
    "ic-agent/wasm-bindgen",
]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:axum-extra",
    "dep:hex",
    "dep:simple_logger",
    "dep:dotenvy",
    "dep:bb8",
    "dep:bb8-redis",
    "dep:redb",
    "dep:redis",
    "dep:sha2",
    "dep:k256",
    "dep:rand",
    "yral-identity/ic-git",
    "dep:p256",
    "dep:jsonwebtoken",
]
release-lib = ["hydrate"]
release-bin = ["ssr", "redis-kv"]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "yral-auth-v2"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
#style-file = "style/main.scss"

# The tailwind input file.
#
# Optional, Activates the tailwind build
tailwind-input-file = "style/tailwind.css"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"

hash-files = true

bin-target = "yral-auth-v2"
